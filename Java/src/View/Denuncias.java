package View;

import Utils.ClienteModel;
import Utils.DenunciaModel;
import Utils.DenunciaRelatorioDTO;
import Utils.FuncionarioModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Utils.HttpConnection;
import Utils.Validador;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import java.awt.Component;
import java.awt.Dimension;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.BorderFactory;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author Oruam
 */
public class Denuncias extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaFuncionarios
     */
    private void listarDenuncias() {
        // Instância a classe de conexão
        HttpConnection httpConnection = new HttpConnection();

        // Chama o método para listar os funcionários cadastrados
        List<DenunciaModel> denuncias = httpConnection.listarDenuncias();

        // Obtem o modelo da tabela
        DefaultTableModel Tabela = (DefaultTableModel) jTDenuncias.getModel();

        // Limpa a tabela antes de adicionar os novos dados
        Tabela.setRowCount(0);
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        // Itera sobre a lista de funcionários e adiciona os dados na tabela
        for (DenunciaModel denuncia : denuncias) {
            Object[] dados = {
                denuncia.getCliente().getNome(),
                denuncia.getTipoDenucias().substring(0, 1).toUpperCase() + denuncia.getTipoDenucias().substring(1).toLowerCase(),        
                denuncia.getStatusGeral().substring(0, 1).toUpperCase() + denuncia.getStatusGeral().substring(1).toLowerCase(),
                denuncia.getDataDenuncia().format(formatter),
                denuncia.getIdDenuncia()
            };
            Tabela.addRow(dados);
        }
    }
    
    private JDesktopPane dashboard;
    private final String emailFuncionario;
    private String funcao;
    private String nomeFuncionario;
    public Denuncias(JDesktopPane dashboard, String nomeFuncionario, String emailFuncionario, String funcao) {
        initComponents();
        this.emailFuncionario = emailFuncionario;
        this.funcao = funcao;
        this.nomeFuncionario = nomeFuncionario;
        this.dashboard = dashboard;
        
        if (funcao.equals("FUNCIONARIO")){
            jPanel9.setVisible(false);
        }
        
        FlatLaf.registerCustomDefaultsSource("tableview");
        FlatMacDarkLaf.setup();
        
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                // Atualiza os dados da tabela periodicamente
                listarDenuncias();
            }
        }, 0, 5000); // Atualiza a cada 5000 ms (5 segundos)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jBGerarRelatorio = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTPesquisar = new javax.swing.JTextField();
        jLPesquisar = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jBAdd = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDenuncias = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCTipoDenuncia = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jCStatus = new javax.swing.JComboBox<>();
        jBLimparFiltros = new javax.swing.JButton();
        jLFundo = new javax.swing.JLabel();

        setBorder(null);
        setTitle("Denúncias");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setInheritsPopupMenu(true);
        setName("Tela Funcionário"); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel2FocusLost(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel2MouseReleased(evt);
            }
        });
        jPanel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanel2KeyReleased(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(238, 238, 238));
        jPanel9.setForeground(new java.awt.Color(233, 233, 233));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBGerarRelatorio.setBackground(new java.awt.Color(24, 24, 24));
        jBGerarRelatorio.setForeground(new java.awt.Color(204, 204, 204));
        jBGerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/DownloadIcon.png"))); // NOI18N
        jBGerarRelatorio.setText("Gerar relatório");
        jBGerarRelatorio.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(59, 59, 59)));
        jBGerarRelatorio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBGerarRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBGerarRelatorioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBGerarRelatorioMouseExited(evt);
            }
        });
        jBGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGerarRelatorioActionPerformed(evt);
            }
        });
        jPanel9.add(jBGerarRelatorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 620, 170, 60));

        jPanel3.setBackground(new java.awt.Color(24, 24, 24));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTPesquisar.setBackground(new java.awt.Color(24, 24, 24));
        jTPesquisar.setForeground(new java.awt.Color(204, 204, 204));
        jTPesquisar.setText("Pesquisar");
        jTPesquisar.setBorder(null);
        jTPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTPesquisarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTPesquisarFocusLost(evt);
            }
        });
        jTPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPesquisarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTPesquisarMouseExited(evt);
            }
        });
        jTPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTPesquisarActionPerformed(evt);
            }
        });
        jTPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTPesquisarKeyReleased(evt);
            }
        });
        jPanel3.add(jTPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 230, 20));

        jLPesquisar.setBackground(new java.awt.Color(40, 40, 40));
        jLPesquisar.setForeground(new java.awt.Color(204, 204, 204));
        jLPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/PesquisarIcon.png"))); // NOI18N
        jPanel3.add(jLPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 30, 30));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 270, 40));

        jPanel1.setBackground(new java.awt.Color(238, 238, 238));
        jPanel1.setForeground(new java.awt.Color(233, 233, 233));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBAdd.setBackground(new java.awt.Color(24, 24, 24));
        jBAdd.setForeground(new java.awt.Color(204, 204, 204));
        jBAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/AddIcon.png"))); // NOI18N
        jBAdd.setText("Cadastrar");
        jBAdd.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(59, 59, 59)));
        jBAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBAddMouseExited(evt);
            }
        });
        jBAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddActionPerformed(evt);
            }
        });
        jPanel1.add(jBAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 110, 30));

        jBCancelar.setBackground(new java.awt.Color(24, 24, 24));
        jBCancelar.setForeground(new java.awt.Color(204, 204, 204));
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/DeletarIcon.png"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(59, 59, 59)));
        jBCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBCancelarMouseExited(evt);
            }
        });
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jBCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 110, 30));

        jBEditar.setBackground(new java.awt.Color(24, 24, 24));
        jBEditar.setForeground(new java.awt.Color(204, 204, 204));
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/DetalhesIcon.png"))); // NOI18N
        jBEditar.setText("Visualizar");
        jBEditar.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(59, 59, 59)));
        jBEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBEditarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBEditarMouseExited(evt);
            }
        });
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });
        jPanel1.add(jBEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 110, 30));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 720, 60));

        jPanel4.setBackground(new java.awt.Color(238, 238, 238));
        jPanel4.setForeground(new java.awt.Color(233, 233, 233));

        jTDenuncias.setShowHorizontalLines(true);
        jTDenuncias.setShowVerticalLines(false);
        jTDenuncias.setGridColor(new java.awt.Color(51,51,51));
        jTDenuncias.setBackground(new java.awt.Color(238, 238, 238));
        jTDenuncias.setIntercellSpacing(new Dimension(0, 10));
        jTDenuncias.setRowHeight(30);
        jTDenuncias.setForeground(new java.awt.Color(51,51,51));
        jTDenuncias.setSelectionBackground(new java.awt.Color(238,238,238));
        jTDenuncias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Tipo", "Status", "Data", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTDenuncias.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTDenuncias.setSelectionBackground(new java.awt.Color(102,102,102));   // Fundo quando selecionado

        JTableHeader header = jTDenuncias.getTableHeader();
        header.setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                // Definir a borda do cabeçalho
                if (column == 0) { // Para a primeira coluna (Nome)
                    label.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 1, table.getGridColor())); // Linha horizontal embaixo e sem linha vertical
                }else if (column == 8) { // Para a ultima coluna (Data de emissão)
                    label.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, table.getGridColor())); // Linha horizontal embaixo e sem linha vertical
                }else {
                    label.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 1, table.getGridColor())); // Linha horizontal embaixo e linha vertical à esquerda
                }

                label.setHorizontalAlignment(SwingConstants.CENTER); // Centralizar o texto no cabeçalho
                return label;
            }
        });
        jTDenuncias.setSelectionForeground(new java.awt.Color(204,204,204));
        jTDenuncias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTDenunciasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTDenuncias);
        if (jTDenuncias.getColumnModel().getColumnCount() > 0) {
            jTDenuncias.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTDenuncias.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTDenuncias.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTDenuncias.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTDenuncias.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, -1, 490));

        jPanel5.setBackground(new java.awt.Color(238, 238, 238));
        jPanel5.setForeground(new java.awt.Color(233, 233, 233));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(24, 24, 24));

        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Tipo de denúncia");

        jCTipoDenuncia.setBackground(new java.awt.Color(24, 24, 24));
        jCTipoDenuncia.setForeground(new java.awt.Color(204, 204, 204));
        jCTipoDenuncia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Violencia", "Perdido", "Abandonado" }));
        jCTipoDenuncia.setBorder(null);
        jCTipoDenuncia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCTipoDenuncia.setOpaque(true);
        jCTipoDenuncia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCTipoDenunciaActionPerformed(evt);
            }
        });
        jPanel1.add(jCTipoDenuncia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, -1, 30));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCTipoDenuncia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCTipoDenuncia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, -1));

        jPanel10.setBackground(new java.awt.Color(24, 24, 24));

        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Status");

        jCStatus.setBackground(new java.awt.Color(24, 24, 24));
        jCStatus.setForeground(new java.awt.Color(204, 204, 204));
        jCStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendente", "Concluido", "Cancelado" }));
        jCStatus.setBorder(null);
        jCStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCStatus.setOpaque(true);
        jCStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCStatusActionPerformed(evt);
            }
        });
        jPanel1.add(jCTipoDenuncia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, -1, 30));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCStatus, 0, 138, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 150, -1));

        jBLimparFiltros.setBackground(new java.awt.Color(24, 24, 24));
        jBLimparFiltros.setForeground(new java.awt.Color(204, 204, 204));
        jBLimparFiltros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/DeletarIcon.png"))); // NOI18N
        jBLimparFiltros.setText("Limpar filtros");
        jBLimparFiltros.setBorder(null);
        jBLimparFiltros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBLimparFiltros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBLimparFiltrosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBLimparFiltrosMouseExited(evt);
            }
        });
        jBLimparFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparFiltrosActionPerformed(evt);
            }
        });
        jPanel5.add(jBLimparFiltros, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 150, 40));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 190, 240));

        jLFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/FundoView.png"))); // NOI18N
        jLFundo.setPreferredSize(new java.awt.Dimension(1170, 1024));
        jPanel2.add(jLFundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1170, 1010));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTnomeActionPerformed

    private void JCgeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCgeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCgeneroActionPerformed

    private void JCtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCtipoActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
  
    }//GEN-LAST:event_formKeyReleased

    private void jPanel2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel2KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel2KeyReleased

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2FocusGained

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseReleased

    private void jTPesquisarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPesquisarMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jTPesquisarMouseExited

    private void jTPesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPesquisarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTPesquisarMouseClicked

    private void jTPesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTPesquisarFocusLost
        // TODO add your handling code here:
        if(jTPesquisar.getText().equals("")){

            jTPesquisar.setText("Pesquisar");
        }
    }//GEN-LAST:event_jTPesquisarFocusLost

    private void jTPesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTPesquisarFocusGained
        // TODO add your handling code here:
        if(jTPesquisar.getText().equals("Pesquisar")){
            jTPesquisar.setText("");
        }
    }//GEN-LAST:event_jTPesquisarFocusGained

    private void jPanel2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jPanel2FocusLost
    
    private void filtrarTabela(String textoFiltro){
        DefaultTableModel modelo = (DefaultTableModel) jTDenuncias.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(modelo);
        jTDenuncias.setRowSorter(obj);

        // Adiciona a flag (?i) para fazer a pesquisa ignorar maiúsculas e minúsculas
        obj.setRowFilter(RowFilter.regexFilter("(?i)" + textoFiltro));
    }
    
    private void jTPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPesquisarKeyReleased
        // TODO add your handling code here:
        filtrarTabela(jTPesquisar.getText());
    }//GEN-LAST:event_jTPesquisarKeyReleased

    private void jTDenunciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTDenunciasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTDenunciasMouseClicked

    private void jTPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTPesquisarActionPerformed

    private void jCTipoDenunciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCTipoDenunciaActionPerformed
        // TODO add your handling code here:
        filtrarTabela(jCTipoDenuncia.getSelectedItem().toString());
    }//GEN-LAST:event_jCTipoDenunciaActionPerformed

    private void jCStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCStatusActionPerformed
        // TODO add your handling code here:
        filtrarTabela(jCStatus.getSelectedItem().toString());
    }//GEN-LAST:event_jCStatusActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = jTDenuncias.getSelectedRows();

        if(selectedRows.length == 0){
            JOptionPane.showMessageDialog(null, "ERRO: selecione uma denúncia.");
        }else if(selectedRows.length > 1){
            JOptionPane.showMessageDialog(null, "ERRO: selecione somente uma denúncia.");
        }else{
            DefaultTableModel modelo = (DefaultTableModel) jTDenuncias.getModel();
            DenunciaModel denunciaDTO = new DenunciaModel();
            
            denunciaDTO.setIdDenuncia(Integer.parseInt(jTDenuncias.getValueAt(jTDenuncias.getSelectedRow(), 4).toString()));
            
            String statusDenuncia = jTDenuncias.getValueAt(jTDenuncias.getSelectedRow(), 2).toString();
            
            if(!statusDenuncia.equals("Cancelado")){
                // Solicitar a senha ao funcionário usando JPasswordField
                JPasswordField passwordField = new JPasswordField();
                int option = JOptionPane.showConfirmDialog(null, passwordField, "Senha funcionário:", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                if (option == JOptionPane.OK_OPTION) {
                    // Obtenha a senha digitada
                    String senhaFuncionario = new String(passwordField.getPassword());

                    // Valida o funcionário com a senha fornecida
                    Validador validador = new Validador();
                    boolean autenticar = validador.validarFuncionario(this.emailFuncionario, senhaFuncionario);

                    if (autenticar) {
                        HttpConnection httpConnection = new HttpConnection();
                        denunciaDTO.setStatusGeral("CANCELADO");
                        boolean response = httpConnection.editarDenuncia(denunciaDTO.getIdDenuncia(), denunciaDTO);

                        if (response){
                            JOptionPane.showMessageDialog(null, "Denúncia cancelada.");
                        }else{
                            JOptionPane.showMessageDialog(null, "ERRO: erro ao cancelar a denúncia.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "ERRO: senha incorreta.");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "ERRO: denúncia já cancelada.");
            }
        }
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBCancelarMouseExited
        // TODO add your handling code here:
        jBCancelar.setBackground(new java.awt.Color(24,24,24));
    }//GEN-LAST:event_jBCancelarMouseExited

    private void jBCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBCancelarMouseEntered
        // TODO add your handling code here:
        jBCancelar.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_jBCancelarMouseEntered

    private void jBAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddActionPerformed
        // TODO add your handling code here:
        CadastrarDenuncia cadastrarDenuncia = new CadastrarDenuncia(dashboard);
        dashboard.add(cadastrarDenuncia);
        cadastrarDenuncia.setVisible(true);
        cadastrarDenuncia.setBounds(300, 0, 860, 733);
    }//GEN-LAST:event_jBAddActionPerformed

    private void jBAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBAddMouseExited
        // TODO add your handling code here:
        jBAdd.setBackground(new java.awt.Color(24,24,24));
    }//GEN-LAST:event_jBAddMouseExited

    private void jBAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBAddMouseEntered
        // TODO add your handling code here:
        jBAdd.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_jBAddMouseEntered

    private void jBEditarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBEditarMouseEntered
        // TODO add your handling code here:
        jBEditar.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_jBEditarMouseEntered

    private void jBEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBEditarMouseExited
        // TODO add your handling code here:
        jBEditar.setBackground(new java.awt.Color(24,24,24));
    }//GEN-LAST:event_jBEditarMouseExited

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = jTDenuncias.getSelectedRows();

        if(selectedRows.length == 0){
            JOptionPane.showMessageDialog(null, "ERRO: selecione uma denúncia.");
        }else if(selectedRows.length > 1){
            JOptionPane.showMessageDialog(null, "ERRO: selecione somente uma denúncia.");
        }else{
            // Seta os dados fornecidos para o DenunciaModel
            DenunciaModel denunciaDTO = new DenunciaModel();
            denunciaDTO.setIdDenuncia(Integer.parseInt(jTDenuncias.getValueAt(jTDenuncias.getSelectedRow(), 4).toString()));
            
            VisualizarDenuncia visualizarDenuncia = new VisualizarDenuncia(dashboard, denunciaDTO.getIdDenuncia(), this.emailFuncionario, this.funcao);
            dashboard.add(visualizarDenuncia);
            visualizarDenuncia.setVisible(true);
            visualizarDenuncia.setBounds(300, 0, 860, 695);
        }
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBGerarRelatorioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBGerarRelatorioMouseEntered
        // TODO add your handling code here:
        jBGerarRelatorio.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_jBGerarRelatorioMouseEntered

    private void jBGerarRelatorioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBGerarRelatorioMouseExited
        // TODO add your handling code here:
        jBGerarRelatorio.setBackground(new java.awt.Color(24,24,24));
    }//GEN-LAST:event_jBGerarRelatorioMouseExited
    
    private void salvarRelatorio(byte[] relatorio, String nomePadraoArquivo) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Salvar Relatório");
        fileChooser.setSelectedFile(new java.io.File(nomePadraoArquivo)); // Define o nome padrão do arquivo

        // Mostra o diálogo de salvar
        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File arquivoSelecionado = fileChooser.getSelectedFile();
            String caminhoArquivo = arquivoSelecionado.getAbsolutePath();

            // Garante que o arquivo tenha a extensão .pdf
            if (!caminhoArquivo.toLowerCase().endsWith(".pdf")) {
                caminhoArquivo += ".pdf";
            }

            try (FileOutputStream fos = new FileOutputStream(caminhoArquivo)) {
                // Escreve o conteúdo do byte[] no arquivo
                fos.write(relatorio);
                fos.flush();
                JOptionPane.showMessageDialog(null, "Relatório salvo com sucesso em: " + caminhoArquivo);
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro ao salvar o relatório: " + e.getMessage());
            }
        }
    }
    
    private void jBGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGerarRelatorioActionPerformed
        // Cria o DTO para o relatório de denúncias
        DenunciaRelatorioDTO relatorioDTO = new DenunciaRelatorioDTO();

        // Lista para armazenar as denúncias
        List<DenunciaModel> denuncias = new ArrayList<>();

        // Obtém o modelo da tabela
        DefaultTableModel tableModel = (DefaultTableModel) jTDenuncias.getModel();  // Assumindo que a tabela de denúncias é jTDenuncias

        // Itera sobre as linhas da tabela para criar os objetos DenunciaModel
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            DenunciaModel denuncia = new DenunciaModel();

            // Configura o cliente na DenunciaModel
            ClienteModel cliente = new ClienteModel();
            cliente.setNome((String) tableModel.getValueAt(i, 0)); // Nome do cliente
            denuncia.setCliente(cliente); // Associa o ClienteModel à DenunciaModel

            // Configura o tipo de denúncia na DenunciaModel
            String tipoDenuncia = (String) tableModel.getValueAt(i, 1).toString().toUpperCase(); // Tipo da denúncia
            denuncia.setTipoDenucias(tipoDenuncia); // Tipo da denúncia

            // Configura o status da denúncia
            String statusDenuncia = (String) tableModel.getValueAt(i, 2).toString().toUpperCase();  // Status da denúncia
            denuncia.setStatusGeral(statusDenuncia); // Status da denúncia

            // Configura a data da denúncia (convertendo de String para LocalDate)
            String dataString = (String) tableModel.getValueAt(i, 3); // Data da denúncia como String
            LocalDate dataDenuncia = LocalDate.parse(dataString, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            denuncia.setDataDenuncia(dataDenuncia); // Define a data como LocalDate

            // Configura o ID da denúncia
            denuncia.setIdDenuncia((int) tableModel.getValueAt(i, 4)); // ID da denúncia

            // Adiciona a denúncia à lista
            denuncias.add(denuncia);
        }

        // Adiciona as denúncias à lista do relatório
        relatorioDTO.setDenuncias(denuncias);

        // Configura o nome do administrador no FuncionarioModel
        FuncionarioModel administrador = new FuncionarioModel();
        administrador.setNome_funcionario(this.nomeFuncionario); // Substitua pelo nome real do administrador
        relatorioDTO.setFuncionario(administrador);

        // Chama o método para gerar o relatório
        HttpConnection httpConnection = new HttpConnection();

        // Aqui você vai enviar o JSON dinâmico
        DenunciaRelatorioDTO response = httpConnection.gerarRelatorioDenuncias(relatorioDTO);

        if (response.getRelatorio() != null) {
            // Define o nome padrão do arquivo
            String nomePadraoArquivo = "RelatorioDenuncias.pdf";

            // Salva o relatório no sistema
            salvarRelatorio(response.getRelatorio(), nomePadraoArquivo);
        } else {
            JOptionPane.showMessageDialog(null, "ERRO: falha ao tentar gerar o relatório de denúncias.");
        }
    }//GEN-LAST:event_jBGerarRelatorioActionPerformed

    private void jBLimparFiltrosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBLimparFiltrosMouseEntered
        // TODO add your handling code here:
        jBLimparFiltros.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_jBLimparFiltrosMouseEntered

    private void jBLimparFiltrosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBLimparFiltrosMouseExited
        // TODO add your handling code here:
        jBLimparFiltros.setBackground(new java.awt.Color(24,24,24));
    }//GEN-LAST:event_jBLimparFiltrosMouseExited

    private void jBLimparFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparFiltrosActionPerformed
        // TODO add your handling code here:
        filtrarTabela("");
    }//GEN-LAST:event_jBLimparFiltrosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdd;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBGerarRelatorio;
    private javax.swing.JButton jBLimparFiltros;
    private javax.swing.JComboBox<String> jCStatus;
    private javax.swing.JComboBox<String> jCTipoDenuncia;
    private javax.swing.JLabel jLFundo;
    private javax.swing.JLabel jLPesquisar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTDenuncias;
    private javax.swing.JTextField jTPesquisar;
    // End of variables declaration//GEN-END:variables
}
